apply plugin: 'maven-publish'
apply plugin: 'signing'

def isReleaseBuild() {
    return version.contains("SNAPSHOT") == false
}

def getMavenRepositoryUrl() {
    return hasProperty('repositoryUrl') ? property('repositoryUrl') : "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
}

def getMavenRepositoryUsername() {
    return hasProperty('sonatypeUsername') ? property('sonatypeUsername') : ""
}

def getMavenRepositoryPassword() {
    return hasProperty('sonatypePassword') ? property('sonatypePassword') : ""
}

afterEvaluate { project ->

    /*
    signing {
        required { isReleaseBuild() && gradle.taskGraph.hasTask("uploadArchives") }
        sign configurations.archives
    }
    */

    publishing.publications {

        maven(MavenPublication) {
            /*
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
            */
            from components.release
            artifactId = project.archivesBaseName

            /*
            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: getMavenRepositoryUsername(), password: getMavenRepositoryPassword())
            }
            */

            pom {
                name = 'Fork of com.davemorrissey.labs:subsampling-scale-image-view-androidx for Cryptomator for Android'
                packaging = 'aar'
                description = 'Unofficial, unaffiliated and unassociated fork of https://github.com/davemorrissey/subsampling-scale-image-view for internal use in Cryptomator for Android.'
                url = 'https://github.com/cryptomator/subsampling-scale-image-view'

                scm {
                    url = 'scm:git@github.com:cryptomator/subsampling-scale-image-view.git'
                    connection = 'scm:git@github.com:cryptomator/subsampling-scale-image-view.git'
                    developerConnection = 'scm:git@github.com:cryptomator/subsampling-scale-image-view.git'
                }

                licenses {
                    license {
                        name = 'The Apache Software License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution = 'repo'
                    }
                }

                developers {
                    developer {
                        id = 'cryptomator'
                        name = 'Cryptomator'
                        url = 'https://cryptomator.org/'
                        roles = ['Maintainer of this fork']
                    }
                    developer {
                        id = 'davemorrissey'
                        name = 'Dave Morrissey'
                        roles = ['Maintainer of the forked repository at https://github.com/davemorrissey/subsampling-scale-image-view']
                    }
                }
            }
        }
    }

    /*
    task androidJavadocs(type: Javadoc) {
        onlyIf { gradle.taskGraph.hasTask("uploadArchives") }
        source = android.sourceSets.main.java.sourceFiles
        destinationDir = rootProject.file("docs/javadoc")
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
        classpath += configurations.compile
        classpath += configurations.javadocs
        options.noTimestamp = true
        options.links = ['https://developer.android.com/reference/']
    }

    task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
        classifier = 'javadoc'
        from androidJavadocs.destinationDir
    }

    task androidSourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.sourceFiles
    }

    artifacts {
        archives androidSourcesJar
        archives androidJavadocsJar
    }
    */

}
